name: Build Android APK

on:
  push:
    branches: [ main, working-app ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, working-app ]
  workflow_dispatch: # Allows manual trigger

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'IncomeExpenseApp/ClientApp/package-lock.json'

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      working-directory: ./IncomeExpenseApp/ClientApp
      run: npm ci

    - name: Build React app
      working-directory: ./IncomeExpenseApp/ClientApp
      run: npm run build

    - name: Verify Capacitor config
      working-directory: ./IncomeExpenseApp/ClientApp
      run: |
        echo "Checking Capacitor configuration..."
        if [ -f capacitor.config.ts ]; then
          cat capacitor.config.ts
        else
          echo "‚ö†Ô∏è capacitor.config.ts not found!"
          exit 1
        fi

    - name: Sync Capacitor
      working-directory: ./IncomeExpenseApp/ClientApp
      run: |
        echo "Syncing Capacitor assets..."
        npx cap sync android

    - name: Grant execute permission for gradlew
      working-directory: ./IncomeExpenseApp/ClientApp/android
      run: chmod +x gradlew

    - name: Build Debug APK
      working-directory: ./IncomeExpenseApp/ClientApp/android
      run: ./gradlew assembleDebug --stacktrace

    - name: Build Release APK (unsigned)
      working-directory: ./IncomeExpenseApp/ClientApp/android
      run: ./gradlew assembleRelease --stacktrace
      continue-on-error: true

    - name: List build outputs
      working-directory: ./IncomeExpenseApp/ClientApp/android
      run: |
        echo "Build outputs:"
        find app/build/outputs/apk -name "*.apk" -type f

    - name: Get APK info
      working-directory: ./IncomeExpenseApp/ClientApp/android
      run: |
        APK_PATH="app/build/outputs/apk/debug/app-debug.apk"
        if [ -f "$APK_PATH" ]; then
          echo "‚úÖ APK built successfully!"
          echo "üìç Location: $APK_PATH"
          echo "üìè Size: $(du -h "$APK_PATH" | cut -f1)"
          ls -lh "$APK_PATH"
        else
          echo "‚ùå APK not found at $APK_PATH"
          exit 1
        fi

    - name: Upload Debug APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: income-expense-app-debug-${{ github.sha }}
        path: ./IncomeExpenseApp/ClientApp/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: Upload Release APK artifact (if exists)
      uses: actions/upload-artifact@v4
      if: hashFiles('./IncomeExpenseApp/ClientApp/android/app/build/outputs/apk/release/*.apk') != ''
      with:
        name: income-expense-app-release-${{ github.sha }}
        path: ./IncomeExpenseApp/ClientApp/android/app/build/outputs/apk/release/*.apk
        retention-days: 90

    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./IncomeExpenseApp/ClientApp/android/app/build/outputs/apk/debug/app-debug.apk
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## üì± Income Expense App - Android Release ${{ github.ref_name }}
          
          ### üöÄ Features:
          - ‚úÖ Income & Expense tracking with categories
          - ‚úÖ Multiple account support (Cash, Bank, Credit Card, etc.)
          - ‚úÖ Transfer money between accounts
          - ‚úÖ Beautiful glassmorphism UI design
          - ‚úÖ Dark/Light mode support
          - ‚úÖ Offline-first with local SQLite database
          - ‚úÖ Transaction history and filtering
          - ‚úÖ Account balance management
          - ‚úÖ Mobile-optimized responsive design
          
          ### üì• Installation Instructions:
          1. **Download** the APK file below (`app-debug.apk`)
          2. **Enable Unknown Sources**: 
             - Go to Settings ‚Üí Security ‚Üí Unknown Sources
             - Or Settings ‚Üí Apps ‚Üí Special Access ‚Üí Install Unknown Apps
          3. **Install** the APK file
          4. **Open** the app and start tracking your finances!
          
          ### ÔøΩ Usage:
          - **Add Account**: Create accounts for Cash, Bank, Credit Cards, etc.
          - **Add Transaction**: Record income or expenses with categories
          - **Transfer**: Move money between accounts
          - **View Summary**: See your total income, expenses, and balance
          
          ### üîß Technical Details:
          - **Platform**: Android (API 22+)
          - **Size**: ~5-10 MB
          - **Framework**: React + Capacitor
          - **Database**: SQLite (local)
          
          ### üìù Notes:
          - This is a debug build for testing purposes
          - All data is stored locally on your device
          - No internet connection required
          
          ---
          Built with ‚ù§Ô∏è using GitHub Actions
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment on PR (for pull requests)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          const apkPath = './IncomeExpenseApp/ClientApp/android/app/build/outputs/apk/debug/app-debug.apk';
          let apkSize = 'N/A';
          
          try {
            const stats = fs.statSync(apkPath);
            apkSize = (stats.size / 1024 / 1024).toFixed(2) + ' MB';
          } catch (e) {
            console.log('Could not get APK size');
          }
          
          const body = `## üì± Android APK Build Complete! ‚úÖ
          
          Your Android APK has been built successfully!
          
          **üì¶ Build Information:**
          - **Size**: ${apkSize}
          - **Build Type**: Debug
          - **Commit**: ${context.sha.substring(0, 7)}
          
          **üì• Download:**
          You can download the APK from the [workflow artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          
          **üîß Testing:**
          1. Download the APK artifact
          2. Transfer to your Android device
          3. Enable "Install from Unknown Sources"
          4. Install and test!
          
          ---
          *Built with GitHub Actions* üöÄ`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });