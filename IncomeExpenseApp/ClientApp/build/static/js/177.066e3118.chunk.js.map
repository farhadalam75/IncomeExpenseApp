{"version":3,"file":"static/js/177.066e3118.chunk.js","mappings":"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","sources":["components/Settings.tsx","services/api.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { transactionApi } from '../services/api';\nimport './Settings.css';\n\nconst Settings: React.FC = () => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [syncStatus, setSyncStatus] = useState<{isAuthenticated: boolean, message: string} | null>(null);\n  const [isSyncing, setIsSyncing] = useState(false);\n\n  useEffect(() => {\n    checkSyncStatus();\n  }, []);\n\n  const checkSyncStatus = async () => {\n    try {\n      const response = await fetch('/api/sync/status');\n      const data = await response.json();\n      setSyncStatus(data);\n    } catch (error) {\n      console.error('Failed to check sync status:', error);\n    }\n  };\n\n  const handleGoogleAuth = async () => {\n    try {\n      const response = await fetch('/api/sync/auth-url');\n      const data = await response.json();\n      \n      if (data.authUrl) {\n        // Open Google auth in new window\n        window.open(data.authUrl, '_blank', 'width=500,height=600');\n        // Check auth status periodically\n        const checkAuth = setInterval(async () => {\n          await checkSyncStatus();\n          if (syncStatus?.isAuthenticated) {\n            clearInterval(checkAuth);\n          }\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Failed to get auth URL:', error);\n      alert('❌ Failed to start Google authentication');\n    }\n  };\n\n  const handleBackup = async () => {\n    try {\n      setIsSyncing(true);\n      await fetch('/api/sync/backup', { method: 'POST' });\n      \n      alert('✅ Data backed up to Google Drive successfully!');\n    } catch (error) {\n      console.error('Backup failed:', error);\n      alert('❌ Backup failed. Please try again.');\n    } finally {\n      setIsSyncing(false);\n    }\n  };\n\n  const handleRestore = async () => {\n    if (!window.confirm('⚠️ This will replace all current data with backup. Continue?')) {\n      return;\n    }\n    \n    try {\n      setIsSyncing(true);\n      const response = await fetch('/api/sync/restore', { method: 'POST' });\n      const data = await response.json();\n      \n      if (response.ok) {\n        alert('✅ Data restored from Google Drive successfully!');\n        window.location.reload();\n      } else {\n        alert(`❌ Restore failed: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Restore failed:', error);\n      alert('❌ Restore failed. Please try again.');\n    } finally {\n      setIsSyncing(false);\n    }\n  };\n\n  const handleDeleteAll = async () => {\n    if (!showConfirm) {\n      setShowConfirm(true);\n      return;\n    }\n\n    try {\n      setIsDeleting(true);\n      await transactionApi.deleteAll();\n      \n      alert('✅ All transactions deleted and account balances reset to zero!');\n      \n      // Reset confirmation state\n      setShowConfirm(false);\n      \n      // Refresh the page to update all components\n      window.location.reload();\n    } catch (error) {\n      console.error('Error deleting transactions:', error);\n      alert('❌ Error deleting transactions. Please try again.');\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setShowConfirm(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"page-header\">\n        <h1>⚙️ Settings</h1>\n      </div>\n\n      <div className=\"settings-content\">\n        <div className=\"settings-section\">\n          <h2>📱 Google Drive Sync</h2>\n          <p className=\"settings-description\">\n            Backup your data to Google Drive to keep it safe across devices and app installations.\n          </p>\n\n          <div className=\"sync-status\">\n            {syncStatus ? (\n              <div className={`status-indicator ${syncStatus.isAuthenticated ? 'connected' : 'disconnected'}`}>\n                <span className=\"status-icon\">\n                  {syncStatus.isAuthenticated ? '✅' : '❌'}\n                </span>\n                <span className=\"status-text\">{syncStatus.message}</span>\n              </div>\n            ) : (\n              <div className=\"status-indicator loading\">\n                <span className=\"status-icon\">🔄</span>\n                <span className=\"status-text\">Checking status...</span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"sync-actions\">\n            {!syncStatus?.isAuthenticated ? (\n              <button\n                className=\"btn-primary\"\n                onClick={handleGoogleAuth}\n                disabled={isSyncing}\n              >\n                <span className=\"sync-icon\">🔗</span>\n                Connect Google Drive\n              </button>\n            ) : (\n              <div className=\"sync-buttons\">\n                <button\n                  className=\"btn-backup\"\n                  onClick={handleBackup}\n                  disabled={isSyncing}\n                >\n                  <span className=\"sync-icon\">☁️</span>\n                  {isSyncing ? 'Backing up...' : 'Backup to Drive'}\n                </button>\n                <button\n                  className=\"btn-restore\"\n                  onClick={handleRestore}\n                  disabled={isSyncing}\n                >\n                  <span className=\"sync-icon\">📥</span>\n                  {isSyncing ? 'Restoring...' : 'Restore from Drive'}\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"settings-section\">\n          <h2>Data Management</h2>\n          <p className=\"settings-description\">\n            Manage your transaction data and account information.\n          </p>\n\n          <div className=\"danger-zone\">\n            <h3>⚠️ Danger Zone</h3>\n            <div className=\"danger-action\">\n              <div className=\"action-info\">\n                <h4>Reset All Data</h4>\n                <p>\n                  This will permanently delete all transactions and reset all account balances to zero. \n                  This action cannot be undone.\n                </p>\n              </div>\n              \n              {!showConfirm ? (\n                <button\n                  className=\"btn-danger\"\n                  onClick={handleDeleteAll}\n                  disabled={isDeleting}\n                  title=\"Delete all transactions and reset account balances\"\n                >\n                  <span className=\"gear-icon\">⚙️</span>\n                  Reset All Data\n                </button>\n              ) : (\n                <div className=\"confirm-actions\">\n                  <p className=\"confirm-text\">\n                    ⚠️ Are you sure? This will delete ALL transactions and reset account balances to zero!\n                  </p>\n                  <div className=\"confirm-buttons\">\n                    <button\n                      className=\"btn-danger-confirm\"\n                      onClick={handleDeleteAll}\n                      disabled={isDeleting}\n                    >\n                      {isDeleting ? '🔄 Deleting...' : '✅ Yes, Delete All'}\n                    </button>\n                    <button\n                      className=\"btn-cancel\"\n                      onClick={handleCancelDelete}\n                      disabled={isDeleting}\n                    >\n                      ❌ Cancel\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"settings-section\">\n          <h2>About</h2>\n          <div className=\"about-info\">\n            <p><strong>Income Expense App</strong></p>\n            <p>Version: 1.0.0</p>\n            <p>A simple and elegant way to track your income, expenses, and transfers.</p>\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default Settings;","import axios from 'axios';\n\n// API configuration - use relative path since React and API are served from same server\nconst API_BASE_URL = '/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Types\nexport interface Transaction {\n  id: number;\n  description: string;\n  amount: number;\n  type: TransactionType;\n  category: string;\n  accountId: number;\n  accountName?: string;\n  accountIcon?: string;\n  date: string;\n  notes?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface TransactionCreateDto {\n  description: string;\n  amount: number;\n  type: TransactionType;\n  category: string;\n  accountId: number;\n  date: string;\n}\n\nexport interface TransactionUpdateDto {\n  description?: string;\n  amount?: number;\n  type?: TransactionType;\n  category?: string;\n  accountId?: number;\n  date?: string;\n}\n\nexport interface Category {\n  id: number;\n  name: string;\n  description?: string;\n  type: TransactionType;\n  isDefault: boolean;\n  createdAt: string;\n  transactionCount?: number;\n  totalAmount?: number;\n}\n\nexport interface CategoryCreateDto {\n  name: string;\n  description?: string;\n  type: TransactionType;\n}\n\nexport interface Account {\n  id: number;\n  name: string;\n  description?: string;\n  type: AccountType;\n  icon: string;\n  balance: number;\n  isDefault: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface TransferDto {\n  fromAccountId: number;\n  toAccountId: number;\n  amount: number;\n  description?: string;\n  date: string;\n}\n\nexport interface AccountCreateDto {\n  name: string;\n  description?: string;\n  type: AccountType;\n  icon: string;\n}\n\nexport interface AccountUpdateDto {\n  name?: string;\n  description?: string;\n  type?: AccountType;\n  icon?: string;\n}\n\nexport enum AccountType {\n  Cash = 0,\n  Bank = 1,\n  CreditCard = 2,\n  Investment = 3,\n  Savings = 4,\n  Other = 5,\n}\n\nexport interface Summary {\n  totalIncome: number;\n  totalExpense: number;\n  balance: number;\n  fromDate?: string;\n  toDate?: string;\n}\n\nexport enum TransactionType {\n  Income = 1,\n  Expense = 2,\n}\n\n// API functions\nexport const transactionApi = {\n  // Get all transactions with optional filters\n  getAll: (params?: {\n    type?: TransactionType;\n    category?: string;\n    fromDate?: string;\n    toDate?: string;\n    page?: number;\n    pageSize?: number;\n  }) => api.get<Transaction[]>('/transactions', { params }),\n\n  // Get transaction by ID\n  getById: (id: number) => api.get<Transaction>(`/transactions/${id}`),\n\n  // Create new transaction\n  create: (transaction: TransactionCreateDto) => \n    api.post<Transaction>('/transactions', transaction),\n\n  // Update transaction\n  update: (id: number, transaction: TransactionUpdateDto) => \n    api.put<Transaction>(`/transactions/${id}`, transaction),\n\n  // Delete transaction\n  delete: (id: number) => api.delete(`/transactions/${id}`),\n\n  // Get summary\n  getSummary: (fromDate?: string, toDate?: string) => \n    api.get<Summary>('/transactions/summary', { \n      params: { fromDate, toDate } \n    }),\n\n  // Delete all transactions\n  deleteAll: () => api.delete('/transactions/all'),\n};\n\nexport const categoryApi = {\n  // Get all categories with optional type filter\n  getAll: (type?: TransactionType) => \n    api.get<Category[]>('/categories', { params: { type } }),\n\n  // Get category by ID\n  getById: (id: number) => api.get<Category>(`/categories/${id}`),\n\n  // Create new category\n  create: (category: CategoryCreateDto) => \n    api.post<Category>('/categories', category),\n\n  // Update category\n  update: (id: number, category: Partial<CategoryCreateDto>) => \n    api.put<Category>(`/categories/${id}`, category),\n\n  // Delete category\n  delete: (id: number) => api.delete(`/categories/${id}`),\n};\n\nexport const accountApi = {\n  // Get all accounts\n  getAll: () => api.get<Account[]>('/accounts'),\n\n  // Get account by ID\n  getById: (id: number) => api.get<Account>(`/accounts/${id}`),\n\n  // Create new account\n  create: (account: AccountCreateDto) => \n    api.post<Account>('/accounts', account),\n\n  // Update account\n  update: (id: number, account: AccountUpdateDto) => \n    api.put<Account>(`/accounts/${id}`, account),\n\n  // Delete account\n  delete: (id: number) => api.delete(`/accounts/${id}`),\n\n  // Adjust account balance\n  adjustBalance: (id: number, amount: number) => \n    api.post(`/accounts/${id}/adjust-balance`, { amount }),\n    \n  // Transfer money between accounts\n  transfer: (data: TransferDto) => api.post('/accounts/transfer', data),\n};\n\nexport default api;"],"names":["Settings","isDeleting","setIsDeleting","useState","showConfirm","setShowConfirm","syncStatus","setSyncStatus","isSyncing","setIsSyncing","useEffect","checkSyncStatus","async","response","fetch","data","json","error","console","handleDeleteAll","transactionApi","deleteAll","alert","window","location","reload","_jsxs","className","children","_jsx","concat","isAuthenticated","message","onClick","method","disabled","confirm","ok","authUrl","open","checkAuth","setInterval","clearInterval","handleCancelDelete","title","api","axios","create","baseURL","headers","TransactionType","getAll","params","get","getById","id","transaction","post","update","put","delete","getSummary","fromDate","toDate","categoryApi","type","category","accountApi","account","adjustBalance","amount","transfer"],"sourceRoot":""}