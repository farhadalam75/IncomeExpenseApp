{"version":3,"file":"static/js/385.50a04322.chunk.js","mappings":"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","sources":["services/api.ts","components/Dashboard.tsx"],"sourcesContent":["import axios from 'axios';\n\n// API configuration - use relative path since React and API are served from same server\nconst API_BASE_URL = '/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Types\nexport interface Transaction {\n  id: number;\n  description: string;\n  amount: number;\n  type: TransactionType;\n  category: string;\n  accountId: number;\n  accountName?: string;\n  accountIcon?: string;\n  date: string;\n  notes?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface TransactionCreateDto {\n  description: string;\n  amount: number;\n  type: TransactionType;\n  category: string;\n  accountId: number;\n  date: string;\n}\n\nexport interface TransactionUpdateDto {\n  description?: string;\n  amount?: number;\n  type?: TransactionType;\n  category?: string;\n  accountId?: number;\n  date?: string;\n}\n\nexport interface Category {\n  id: number;\n  name: string;\n  description?: string;\n  type: TransactionType;\n  isDefault: boolean;\n  createdAt: string;\n  transactionCount?: number;\n  totalAmount?: number;\n}\n\nexport interface CategoryCreateDto {\n  name: string;\n  description?: string;\n  type: TransactionType;\n}\n\nexport interface Account {\n  id: number;\n  name: string;\n  description?: string;\n  type: AccountType;\n  icon: string;\n  balance: number;\n  isDefault: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface TransferDto {\n  fromAccountId: number;\n  toAccountId: number;\n  amount: number;\n  description?: string;\n  date: string;\n}\n\nexport interface AccountCreateDto {\n  name: string;\n  description?: string;\n  type: AccountType;\n  icon: string;\n}\n\nexport interface AccountUpdateDto {\n  name?: string;\n  description?: string;\n  type?: AccountType;\n  icon?: string;\n}\n\nexport enum AccountType {\n  Cash = 0,\n  Bank = 1,\n  CreditCard = 2,\n  Investment = 3,\n  Savings = 4,\n  Other = 5,\n}\n\nexport interface Summary {\n  totalIncome: number;\n  totalExpense: number;\n  balance: number;\n  fromDate?: string;\n  toDate?: string;\n}\n\nexport enum TransactionType {\n  Income = 1,\n  Expense = 2,\n}\n\n// API functions\nexport const transactionApi = {\n  // Get all transactions with optional filters\n  getAll: (params?: {\n    type?: TransactionType;\n    category?: string;\n    fromDate?: string;\n    toDate?: string;\n    page?: number;\n    pageSize?: number;\n  }) => api.get<Transaction[]>('/transactions', { params }),\n\n  // Get transaction by ID\n  getById: (id: number) => api.get<Transaction>(`/transactions/${id}`),\n\n  // Create new transaction\n  create: (transaction: TransactionCreateDto) => \n    api.post<Transaction>('/transactions', transaction),\n\n  // Update transaction\n  update: (id: number, transaction: TransactionUpdateDto) => \n    api.put<Transaction>(`/transactions/${id}`, transaction),\n\n  // Delete transaction\n  delete: (id: number) => api.delete(`/transactions/${id}`),\n\n  // Get summary\n  getSummary: (fromDate?: string, toDate?: string) => \n    api.get<Summary>('/transactions/summary', { \n      params: { fromDate, toDate } \n    }),\n\n  // Delete all transactions\n  deleteAll: () => api.delete('/transactions/all'),\n};\n\nexport const categoryApi = {\n  // Get all categories with optional type filter\n  getAll: (type?: TransactionType) => \n    api.get<Category[]>('/categories', { params: { type } }),\n\n  // Get category by ID\n  getById: (id: number) => api.get<Category>(`/categories/${id}`),\n\n  // Create new category\n  create: (category: CategoryCreateDto) => \n    api.post<Category>('/categories', category),\n\n  // Update category\n  update: (id: number, category: Partial<CategoryCreateDto>) => \n    api.put<Category>(`/categories/${id}`, category),\n\n  // Delete category\n  delete: (id: number) => api.delete(`/categories/${id}`),\n};\n\nexport const accountApi = {\n  // Get all accounts\n  getAll: () => api.get<Account[]>('/accounts'),\n\n  // Get account by ID\n  getById: (id: number) => api.get<Account>(`/accounts/${id}`),\n\n  // Create new account\n  create: (account: AccountCreateDto) => \n    api.post<Account>('/accounts', account),\n\n  // Update account\n  update: (id: number, account: AccountUpdateDto) => \n    api.put<Account>(`/accounts/${id}`, account),\n\n  // Delete account\n  delete: (id: number) => api.delete(`/accounts/${id}`),\n\n  // Adjust account balance\n  adjustBalance: (id: number, amount: number) => \n    api.post(`/accounts/${id}/adjust-balance`, { amount }),\n    \n  // Transfer money between accounts\n  transfer: (data: TransferDto) => api.post('/accounts/transfer', data),\n};\n\nexport default api;","import React, { useState, useEffect, useCallback } from 'react';\nimport { transactionApi, accountApi, Transaction, TransactionType, Account } from '../services/api';\n\ninterface DashboardProps {\n  onNavigate: (page: 'dashboard' | 'add-transaction' | 'transactions' | 'categories' | 'transfer') => void;\n}\n\nconst Dashboard: React.FC<DashboardProps> = ({ onNavigate }) => {\n  const [summary, setSummary] = useState<any>(null);\n  const [recentTransactions, setRecentTransactions] = useState<Transaction[]>([]);\n  const [recentTransfers, setRecentTransfers] = useState<Transaction[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showAllAccounts, setShowAllAccounts] = useState(false);\n  const [accounts, setAccounts] = useState<Account[]>([]);\n  \n  // Date filters\n  const today = new Date().toISOString().split('T')[0];\n  const [fromDate, setFromDate] = useState(today);\n  const [toDate, setToDate] = useState(today);\n\n  const loadDashboardData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Load summary\n      const summaryResponse = await transactionApi.getSummary(fromDate, toDate);\n      setSummary(summaryResponse.data);\n\n      // Load recent transactions (limit to 5)\n      const transactionsResponse = await transactionApi.getAll({\n        fromDate,\n        toDate,\n        page: 1,\n        pageSize: 5\n      });\n      \n      // Separate regular transactions and transfers\n      const allTransactions = transactionsResponse.data;\n      const regularTransactions = allTransactions.filter(t => t.category !== 'Transfer');\n      const transfers = allTransactions.filter(t => t.category === 'Transfer');\n      \n      setRecentTransactions(regularTransactions);\n      setRecentTransfers(transfers);\n\n      // Load accounts\n      const accountsResponse = await accountApi.getAll();\n      setAccounts(accountsResponse.data);\n\n    } catch (err) {\n      console.error('Failed to load dashboard data:', err);\n      setError('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  }, [fromDate, toDate]);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, [loadDashboardData]);\n\n  const formatCurrency = (amount: number) => {\n    return `৳${amount.toLocaleString('en-BD', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    })}`;\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return 'Invalid Date';\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n      });\n    } catch {\n      return 'Invalid Date';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"glass-card\">\n        <div className=\"loading\">Loading dashboard...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"glass-card\">\n        <div className=\"error\">{error}</div>\n        <button className=\"btn btn-primary\" onClick={loadDashboardData}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1 style={{ color: 'white', marginBottom: '2rem', textAlign: 'center', fontSize: 'clamp(1.8rem, 4vw, 2.5rem)' }}>\n        📊 Dashboard\n      </h1>\n      \n      {/* Date Filters */}\n      <div className=\"glass-card\" style={{ marginBottom: '2rem', padding: '1rem' }}>\n        <div style={{ display: 'flex', gap: '1rem', alignItems: 'center', flexWrap: 'wrap' }}>\n          <div style={{ display: 'flex', flexDirection: 'column', minWidth: '150px' }}>\n            <label style={{ color: 'white', marginBottom: '0.5rem', fontSize: '0.9rem' }}>From Date</label>\n            <input\n              type=\"date\"\n              value={fromDate}\n              onChange={(e) => setFromDate(e.target.value)}\n              style={{\n                padding: '0.5rem',\n                borderRadius: '8px',\n                border: '1px solid rgba(255, 255, 255, 0.2)',\n                background: 'rgba(255, 255, 255, 0.1)',\n                color: 'white',\n                fontSize: '0.9rem'\n              }}\n            />\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'column', minWidth: '150px' }}>\n            <label style={{ color: 'white', marginBottom: '0.5rem', fontSize: '0.9rem' }}>To Date</label>\n            <input\n              type=\"date\"\n              value={toDate}\n              onChange={(e) => setToDate(e.target.value)}\n              style={{\n                padding: '0.5rem',\n                borderRadius: '8px',\n                border: '1px solid rgba(255, 255, 255, 0.2)',\n                background: 'rgba(255, 255, 255, 0.1)',\n                color: 'white',\n                fontSize: '0.9rem'\n              }}\n            />\n          </div>\n          <button\n            onClick={loadDashboardData}\n            style={{\n              padding: '0.5rem 1rem',\n              borderRadius: '8px',\n              border: 'none',\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n              color: 'white',\n              cursor: 'pointer',\n              fontSize: '0.9rem',\n              marginTop: 'auto'\n            }}\n          >\n            Filter\n          </button>\n        </div>\n      </div>\n      \n      {/* Summary Cards */}\n      {summary && (\n        <div className=\"dashboard\" style={{ \n          marginBottom: '2rem',\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n          gap: '1rem'\n        }}>\n          <div className=\"stat-card income\" style={{\n            background: 'linear-gradient(135deg, rgba(34, 197, 94, 0.15), rgba(22, 163, 74, 0.15))',\n            border: '1px solid rgba(34, 197, 94, 0.3)',\n            padding: '2rem 1rem',\n            textAlign: 'center'\n          }}>\n            <div className=\"stat-icon\" style={{ fontSize: '2rem', marginBottom: '1rem', color: '#22c55e' }}>💰</div>\n            <div className=\"stat-value\" style={{ \n              fontSize: 'clamp(1.5rem, 4vw, 2.5rem)', \n              fontWeight: '700', \n              color: '#22c55e',\n              marginBottom: '0.5rem'\n            }}>\n              {formatCurrency(summary.totalIncome)}\n            </div>\n            <div className=\"stat-label\" style={{ \n              fontSize: '1rem', \n              color: 'rgba(255, 255, 255, 0.9)',\n              fontWeight: '500' \n            }}>\n              Total Income\n            </div>\n          </div>\n          \n          <div className=\"stat-card expense\" style={{\n            background: 'linear-gradient(135deg, rgba(239, 68, 68, 0.15), rgba(220, 38, 38, 0.15))',\n            border: '1px solid rgba(239, 68, 68, 0.3)',\n            padding: '2rem 1rem',\n            textAlign: 'center'\n          }}>\n            <div className=\"stat-icon\" style={{ fontSize: '2rem', marginBottom: '1rem', color: '#ef4444' }}>💸</div>\n            <div className=\"stat-value\" style={{ \n              fontSize: 'clamp(1.5rem, 4vw, 2.5rem)', \n              fontWeight: '700', \n              color: '#ef4444',\n              marginBottom: '0.5rem'\n            }}>\n              {formatCurrency(summary.totalExpense)}\n            </div>\n            <div className=\"stat-label\" style={{ \n              fontSize: '1rem', \n              color: 'rgba(255, 255, 255, 0.9)',\n              fontWeight: '500' \n            }}>\n              Total Expenses\n            </div>\n          </div>\n          \n          <div \n            className=\"stat-card balance\" \n            onClick={() => setShowAllAccounts(!showAllAccounts)}\n            style={{\n              background: `linear-gradient(135deg, ${summary.balance >= 0 \n                ? 'rgba(59, 130, 246, 0.15), rgba(37, 99, 235, 0.15)'\n                : 'rgba(239, 68, 68, 0.15), rgba(220, 38, 38, 0.15)'\n              })`,\n              border: `1px solid ${summary.balance >= 0 ? 'rgba(59, 130, 246, 0.3)' : 'rgba(239, 68, 68, 0.3)'}`,\n              padding: '2rem 1rem',\n              textAlign: 'center',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease'\n            }}\n          >\n            <div className=\"stat-icon\" style={{ \n              fontSize: '2rem', \n              marginBottom: '1rem', \n              color: summary.balance >= 0 ? '#3b82f6' : '#ef4444' \n            }}>\n              {showAllAccounts ? '�️' : '�'}\n            </div>\n            \n            {!showAllAccounts ? (\n              // Show Cash account balance only\n              <>\n                <div className=\"stat-value\" style={{ \n                  fontSize: 'clamp(1.5rem, 4vw, 2.5rem)', \n                  fontWeight: '700', \n                  color: (accounts.find(a => a.name === 'Cash')?.balance || 0) >= 0 ? '#3b82f6' : '#ef4444',\n                  marginBottom: '0.5rem'\n                }}>\n                  {formatCurrency(accounts.find(a => a.name === 'Cash')?.balance || 0)}\n                </div>\n                <div className=\"stat-label\" style={{ \n                  fontSize: '1rem', \n                  color: 'rgba(255, 255, 255, 0.9)',\n                  fontWeight: '500' \n                }}>\n                  Cash Balance\n                </div>\n                <div style={{ \n                  fontSize: '0.8rem', \n                  color: 'rgba(255, 255, 255, 0.6)',\n                  marginTop: '0.5rem'\n                }}>\n                  Click to see all accounts\n                </div>\n              </>\n            ) : (\n              // Show all account balances\n              <div style={{ fontSize: '0.9rem' }}>\n                {accounts.map(account => (\n                  <div key={account.id} style={{ \n                    marginBottom: '0.8rem', \n                    display: 'flex', \n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  }}>\n                    <span style={{ \n                      display: 'flex', \n                      alignItems: 'center',\n                      color: 'rgba(255, 255, 255, 0.9)'\n                    }}>\n                      <span style={{ marginRight: '0.5rem' }}>{account.icon}</span>\n                      {account.name}\n                    </span>\n                    <span style={{ \n                      color: account.balance >= 0 ? '#4ade80' : '#ef4444',\n                      fontWeight: 'bold'\n                    }}>\n                      {formatCurrency(account.balance)}\n                    </span>\n                  </div>\n                ))}\n                <div style={{ \n                  borderTop: '1px solid rgba(255, 255, 255, 0.2)',\n                  paddingTop: '0.8rem',\n                  marginTop: '0.8rem',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  fontWeight: 'bold'\n                }}>\n                  <span>Total:</span>\n                  <span style={{ \n                    color: summary.balance >= 0 ? '#4ade80' : '#ef4444'\n                  }}>\n                    {formatCurrency(summary.balance)}\n                  </span>\n                </div>\n                <div style={{ \n                  fontSize: '0.7rem', \n                  color: 'rgba(255, 255, 255, 0.6)',\n                  marginTop: '0.5rem'\n                }}>\n                  Click to show Cash only\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Quick Actions */}\n      <div style={{ \n        display: 'grid', \n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', \n        gap: '1rem',\n        margin: '2rem 0'\n      }}>\n        <div \n          className=\"glass-card quick-action-card\"\n          onClick={() => onNavigate('add-transaction')}\n          style={{\n            cursor: 'pointer',\n            padding: '1.2rem',\n            textAlign: 'center',\n            transition: 'all 0.3s ease',\n            border: '2px solid rgba(34, 197, 94, 0.2)'\n          }}\n        >\n          <div style={{ fontSize: '2rem', marginBottom: '0.8rem' }}>➕</div>\n          <h3 style={{ color: '#4ade80', marginBottom: '0.4rem', fontSize: '1.1rem' }}>Add Transaction</h3>\n          <p style={{ color: 'rgba(255, 255, 255, 0.7)', fontSize: '0.85rem' }}>\n            Record income or expense\n          </p>\n        </div>\n        \n        <div \n          className=\"glass-card quick-action-card\"\n          onClick={() => onNavigate('transfer')}\n          style={{\n            cursor: 'pointer',\n            padding: '1.2rem',\n            textAlign: 'center',\n            transition: 'all 0.3s ease',\n            border: '2px solid rgba(249, 115, 22, 0.2)'\n          }}\n        >\n          <div style={{ fontSize: '2rem', marginBottom: '0.8rem' }}>🔄</div>\n          <h3 style={{ color: '#fb923c', marginBottom: '0.4rem', fontSize: '1.1rem' }}>Transfer Money</h3>\n          <p style={{ color: 'rgba(255, 255, 255, 0.7)', fontSize: '0.85rem' }}>\n            Move between accounts\n          </p>\n        </div>\n        \n        <div \n          className=\"glass-card quick-action-card\"\n          onClick={() => onNavigate('transactions')}\n          style={{\n            cursor: 'pointer',\n            padding: '1.2rem',\n            textAlign: 'center',\n            transition: 'all 0.3s ease',\n            border: '2px solid rgba(59, 130, 246, 0.2)'\n          }}\n        >\n          <div style={{ fontSize: '2rem', marginBottom: '0.8rem' }}>📊</div>\n          <h3 style={{ color: '#60a5fa', marginBottom: '0.4rem', fontSize: '1.1rem' }}>View Transactions</h3>\n          <p style={{ color: 'rgba(255, 255, 255, 0.7)', fontSize: '0.85rem' }}>\n            Browse and filter\n          </p>\n        </div>\n        \n        <div \n          className=\"glass-card quick-action-card\"\n          onClick={() => onNavigate('categories')}\n          style={{\n            cursor: 'pointer',\n            padding: '1.2rem',\n            textAlign: 'center',\n            transition: 'all 0.3s ease',\n            border: '2px solid rgba(168, 85, 247, 0.2)'\n          }}\n        >\n          <div style={{ fontSize: '2rem', marginBottom: '0.8rem' }}>⚙️</div>\n          <h3 style={{ color: '#a855f7', marginBottom: '0.4rem', fontSize: '1.1rem' }}>Manage Categories</h3>\n          <p style={{ color: 'rgba(255, 255, 255, 0.7)', fontSize: '0.85rem' }}>\n            Add or edit categories\n          </p>\n        </div>\n      </div>\n\n      {/* Charts Section */}\n      {summary && (\n        <div className=\"glass-card\" style={{ marginTop: '2rem' }}>\n          <h2 style={{ color: 'white', marginBottom: '1.5rem' }}>\n            Financial Overview\n          </h2>\n          \n          <div style={{ \n            display: 'grid', \n            gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', \n            gap: '2rem' \n          }}>\n            {/* Income vs Expense Chart */}\n            <div>\n              <h3 style={{ color: 'white', marginBottom: '1rem', fontSize: '1.1rem' }}>\n                Income vs Expenses\n              </h3>\n              <div style={{ \n                display: 'flex', \n                alignItems: 'end', \n                height: '200px', \n                gap: '1rem',\n                padding: '1rem',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n                borderRadius: '8px',\n                background: 'rgba(255, 255, 255, 0.05)'\n              }}>\n                {/* Income Bar */}\n                <div style={{ \n                  display: 'flex', \n                  flexDirection: 'column', \n                  alignItems: 'center',\n                  flex: 1\n                }}>\n                  <div style={{\n                    width: '60px',\n                    height: `${Math.max((summary.totalIncome / Math.max(summary.totalIncome, summary.totalExpense, 1)) * 150, 10)}px`,\n                    background: 'linear-gradient(180deg, #4ade80, #22c55e)',\n                    borderRadius: '4px 4px 0 0',\n                    marginBottom: '0.5rem',\n                    transition: 'height 0.3s ease'\n                  }}></div>\n                  <div style={{ color: '#4ade80', fontSize: '0.9rem', fontWeight: 'bold' }}>\n                    {formatCurrency(summary.totalIncome)}\n                  </div>\n                  <div style={{ color: 'rgba(255, 255, 255, 0.7)', fontSize: '0.8rem' }}>\n                    Income\n                  </div>\n                </div>\n\n                {/* Expense Bar */}\n                <div style={{ \n                  display: 'flex', \n                  flexDirection: 'column', \n                  alignItems: 'center',\n                  flex: 1\n                }}>\n                  <div style={{\n                    width: '60px',\n                    height: `${Math.max((summary.totalExpense / Math.max(summary.totalIncome, summary.totalExpense, 1)) * 150, 10)}px`,\n                    background: 'linear-gradient(180deg, #fbbf24, #f59e0b)',\n                    borderRadius: '4px 4px 0 0',\n                    marginBottom: '0.5rem',\n                    transition: 'height 0.3s ease'\n                  }}></div>\n                  <div style={{ color: '#fbbf24', fontSize: '0.9rem', fontWeight: 'bold' }}>\n                    {formatCurrency(summary.totalExpense)}\n                  </div>\n                  <div style={{ color: 'rgba(255, 255, 255, 0.7)', fontSize: '0.8rem' }}>\n                    Expenses\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Account Balance Pie Chart */}\n            <div>\n              <h3 style={{ color: 'white', marginBottom: '1rem', fontSize: '1.1rem' }}>\n                Account Balances\n              </h3>\n              <div style={{ \n                display: 'flex', \n                flexDirection: 'column', \n                gap: '0.8rem',\n                padding: '1rem',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n                borderRadius: '8px',\n                background: 'rgba(255, 255, 255, 0.05)'\n              }}>\n                {accounts.map((account, index) => {\n                  const totalBalance = accounts.reduce((sum, acc) => sum + acc.balance, 1);\n                  const percentage = Math.max((account.balance / totalBalance) * 100, 0);\n                  const colors = ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6'];\n                  const color = colors[index % colors.length];\n                  \n                  return (\n                    <div key={account.id} style={{ display: 'flex', alignItems: 'center', gap: '0.8rem' }}>\n                      <div style={{\n                        width: '12px',\n                        height: '12px',\n                        backgroundColor: color,\n                        borderRadius: '2px'\n                      }}></div>\n                      <div style={{ flex: 1 }}>\n                        <div style={{ \n                          display: 'flex', \n                          justifyContent: 'space-between', \n                          alignItems: 'center',\n                          marginBottom: '0.2rem'\n                        }}>\n                          <span style={{ color: 'white', fontSize: '0.9rem' }}>\n                            {account.icon} {account.name}\n                          </span>\n                          <span style={{ color: color, fontSize: '0.9rem', fontWeight: 'bold' }}>\n                            {formatCurrency(account.balance)}\n                          </span>\n                        </div>\n                        <div style={{\n                          width: '100%',\n                          height: '6px',\n                          backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                          borderRadius: '3px',\n                          overflow: 'hidden'\n                        }}>\n                          <div style={{\n                            width: `${percentage}%`,\n                            height: '100%',\n                            backgroundColor: color,\n                            borderRadius: '3px',\n                            transition: 'width 0.3s ease'\n                          }}></div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Recent Transactions */}\n      <div className=\"glass-card\" style={{ marginTop: '2rem' }}>\n        <h2 style={{ color: 'white', marginBottom: '1.5rem' }}>\n          Recent Transactions\n        </h2>\n        \n        {recentTransactions.length > 0 ? (\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Description</th>\n                  <th>Category</th>\n                  <th>Type</th>\n                  <th>Amount</th>\n                </tr>\n              </thead>\n              <tbody>\n                {recentTransactions.map((transaction) => (\n                  <tr key={transaction.id}>\n                    <td>{formatDate(transaction.date)}</td>\n                    <td>{transaction.description}</td>\n                    <td>{transaction.category}</td>\n                    <td>\n                      <span\n                        style={{\n                          color: transaction.type === TransactionType.Income ? '#4ade80' : '#fbbf24',\n                          fontWeight: 'bold',\n                        }}\n                      >\n                        {transaction.type === TransactionType.Income ? 'Income' : 'Expense'}\n                      </span>\n                    </td>\n                    <td\n                      style={{\n                        color: transaction.type === TransactionType.Income ? '#4ade80' : '#fbbf24',\n                        fontWeight: 'bold',\n                      }}\n                    >\n                      {transaction.type === TransactionType.Income ? '+' : '-'}\n                      {formatCurrency(Math.abs(transaction.amount))}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div style={{ textAlign: 'center', color: 'rgba(255, 255, 255, 0.7)', padding: '2rem' }}>\n            No transactions found. Start by adding your first transaction!\n          </div>\n        )}\n      </div>\n\n      {/* Recent Transfers */}\n      <div className=\"glass-card\" style={{ marginTop: '2rem' }}>\n        <h2 style={{ color: 'white', marginBottom: '1.5rem' }}>\n          💸 Recent Transfers\n        </h2>\n        \n        {recentTransfers.length > 0 ? (\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Description</th>\n                  <th>From/To Account</th>\n                  <th>Amount</th>\n                </tr>\n              </thead>\n              <tbody>\n                {recentTransfers.map((transfer) => (\n                  <tr key={transfer.id}>\n                    <td>{formatDate(transfer.date)}</td>\n                    <td>{transfer.description}</td>\n                    <td>\n                      <span style={{ color: '#8b5cf6', fontWeight: 'bold' }}>\n                        {transfer.accountIcon} {transfer.accountName}\n                      </span>\n                    </td>\n                    <td\n                      style={{\n                        color: '#8b5cf6',\n                        fontWeight: 'bold',\n                      }}\n                    >\n                      ↔️ {formatCurrency(Math.abs(transfer.amount))}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div style={{ textAlign: 'center', color: 'rgba(255, 255, 255, 0.7)', padding: '2rem' }}>\n            No recent transfers found. Use the Transfer Money feature to move funds between accounts!\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"names":["api","axios","create","baseURL","headers","TransactionType","transactionApi","getAll","params","get","getById","id","concat","transaction","post","update","put","delete","getSummary","fromDate","toDate","deleteAll","categoryApi","type","category","accountApi","account","adjustBalance","amount","transfer","data","_ref","_accounts$find","_accounts$find2","onNavigate","summary","setSummary","useState","recentTransactions","setRecentTransactions","recentTransfers","setRecentTransfers","loading","setLoading","error","setError","showAllAccounts","setShowAllAccounts","accounts","setAccounts","today","Date","toISOString","split","setFromDate","setToDate","loadDashboardData","useCallback","async","summaryResponse","allTransactions","page","pageSize","regularTransactions","filter","t","transfers","accountsResponse","err","console","useEffect","formatCurrency","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","dateString","date","isNaN","getTime","toLocaleDateString","year","month","day","_unused","_jsx","className","children","_jsxs","onClick","style","color","marginBottom","textAlign","fontSize","padding","display","gap","alignItems","flexWrap","flexDirection","minWidth","value","onChange","e","target","borderRadius","border","background","cursor","marginTop","gridTemplateColumns","fontWeight","totalIncome","totalExpense","balance","transition","map","justifyContent","marginRight","icon","name","borderTop","paddingTop","_Fragment","find","a","margin","height","flex","width","Math","max","index","totalBalance","reduce","sum","acc","percentage","colors","length","backgroundColor","overflow","description","Income","abs","accountIcon","accountName"],"sourceRoot":""}